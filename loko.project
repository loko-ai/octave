{
  "name": "octave",
  "id": "octave",
  "description": "",
  "created_on": "18/02/2023, 06:01:39",
  "last_modify": "17/03/2023, 16:04:04",
  "graphs": {
    "main": {
      "nodes": [
        {
          "id": "165c3f94-8187-4466-9d1e-5f145aa8e348",
          "position": {
            "x": 315,
            "y": 14
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Octave",
            "events": null,
            "description": "This components allows to run octave/matlab code. The return value has to be assigned to the 'ret' variable",
            "inputs": [
              {
                "id": "input",
                "label": "input",
                "service": "",
                "to": "output"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Scripting",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "code",
                  "type": "code",
                  "label": "code",
                  "helper": "",
                  "group": "",
                  "value": "ret=linspace(0, 2*pi)",
                  "description": "",
                  "validation": null
                }
              ],
              "click": null,
              "icon": "RiCheckboxBlankCircleFill",
              "values": {
                "comment": "",
                "alias": "Nota",
                "debug": true,
                "code": "function nota = findnote(x)\nlista_freq = [16.35,17.32,18.35,19.45,20.6,21.83,23.12,24.5,25.96,27.5,29.14,30.87];\nlista_note = {'DO','DO#','RE','RE#','MI','FA','FA#','SOL','SOL#','LA','LA#','SI'};\ntrasformata = fft(x,44100);\nmodulo = abs(trasformata);\n[picco,frequenza] = max(modulo);\nfrequenza = frequenza - 1;\nwhile frequenza >= 31.785\n    frequenza = frequenza/2;\nend\ndiff = lista_freq - frequenza;\ndiff = abs(diff);\n[val,pos] = min(diff);\nposnota = lista_note(pos);\nnota = char(posnota);\nend\n\n\n[datan y] = audioread('/data/nota.wav');\nret = findnote(datan)"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 315,
            "y": 14
          },
          "__class__": "Node"
        },
        {
          "id": "0784a7ea-5fe1-453e-a404-28700da5b991",
          "position": {
            "x": 73,
            "y": -50.997039794921875
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Trigger",
            "events": null,
            "description": "### Description\nThe TRIGGER component is used to start streams.\n\n### Output\nThe parameter Type can be set as a **String** or an **Object**. The parameter Value, on the other hand, defines the actual output of the component.",
            "inputs": [],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "type",
                  "type": "select",
                  "description": "The type of data",
                  "label": "Type",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": [
                    "String",
                    "Object"
                  ],
                  "value": null
                },
                {
                  "name": "value",
                  "type": "dynamic",
                  "dynamicType": {
                    "String": "area",
                    "Object": "code"
                  },
                  "parent": "type",
                  "label": "Value",
                  "validation": {
                    "required": "Required field"
                  }
                }
              ],
              "click": "Send message",
              "icon": "RiPlayFill",
              "values": {
                "type": "String",
                "value": "Hello world!"
              }
            }
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 73,
            "y": -50.997039794921875
          },
          "__class__": "Node"
        },
        {
          "id": "0abfc61f-132b-46a3-87c7-7032125f3ce8",
          "position": {
            "x": 344,
            "y": 221.00296020507812
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Octave",
            "events": null,
            "description": "This components allows to run octave/matlab code. The return value has to be assigned to the 'ret' variable",
            "inputs": [
              {
                "id": "input",
                "label": "input",
                "service": "",
                "to": "output"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Scripting",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "code",
                  "type": "code",
                  "label": "code",
                  "helper": "",
                  "group": "",
                  "value": "ret=linspace(0, 2*pi)",
                  "description": "",
                  "validation": null
                }
              ],
              "click": null,
              "icon": "RiCheckboxBlankCircleFill",
              "values": {
                "comment": "",
                "alias": "Fat-Tree",
                "debug": false,
                "code": "% Write a script that generates a fat tree topology graph and\n% finds all paths connecting a given source ToR and a given\n% destination ToR. Find also all disjoint paths.\nn = data;\nnservers = n*(n/2)^2;\nnedge = n/2*n;\nnaggregation = n/2*n;\nncore = (n/2)^2;\nnpods = n;\nntot = [nservers,nedge,naggregation,ncore];\nA = eye(sum(ntot));\nserv = 1;\nedge = nservers+1;\nagg = nservers+nedge+1;\n\n% Pods\nfor p = 1:npods\n    for i = 1:n/2\n        for j = 1:n/2\n            % servers - edge\n            A(serv,edge) = 1;\n            A(edge, serv) = 1;\n            serv = serv+1;\n        end\n        for k = 1:n/2\n            % edge - aggregation\n            A(edge,agg) = 1;\n            A(agg, edge) = 1;\n            agg = agg+1;\n        end\n        edge = edge+1;\n        agg = agg-n/2;\n    end\n    agg = agg+n/2;\nend\n% Core\nagg = nservers+nedge+1;\ncore = nservers+nedge+naggregation+1;\nfor p = 1:npods\n    for i = 1:n/2\n        for j = 1:n/2\n            A(agg,core) = 1;\n            A(core,agg) = 1;\n            core = core+1;\n        end\n        agg = agg+1;\n    end\n    core = nservers+nedge+naggregation+1;\nend\n        \n    \n\n\n\n% plot1\nnlevels = 4;\nk = 1;\nx = zeros(sum(ntot),1);\ny = zeros(sum(ntot),1);\nfor i = 1:nlevels\n    for j = 1:ntot(i)\n        y(k) = (i)/(nlevels+1);\n        x(k) = (j)/(ntot(i)+1);\n        k = k+1;\n    end\nend\nfigure\ngplot(A, [x y],'-k*');\nset(gca,'XTick',[],'YTick',[])\ntitle('Fat-Tree Topology','Color','k','fontsize', 18)\naxis([-0.25 1.05 0.12 0.85])\ntext (-0.22,0.2,'Servers','Color',[0 0.5 0.6],'fontsize', 11)\ntext (-0.22,0.4,'Edge','Color',[0 0.5 0.6],'fontsize', 11)\ntext (-0.22,0.6,'Aggregation','Color',[0 0.5 0.6],'fontsize', 11)\ntext (-0.22,0.8,'Core','Color',[0 0.5 0.6],'fontsize', 11)\nfor i = 0:n-1\n    text (i/n,0.17,'Pod','Color',[0 0.5 0.6],'fontsize', 11)\nend\nsaveas(gcf,'/data/network_topologies/fattree1.png')\n\n% plot2\nnlevels = 4;\nk = 1;\nx = zeros(sum(ntot),1);\ny = zeros(sum(ntot),1);\nt = zeros(sum(ntot),1);\nfor i = 1:nlevels\n    for j = 1:ntot(i)\n        x(k) = (nlevels-i+0.2)*sin(j*(2*pi)/(ntot(i)));\n        y(k) = (nlevels-i+0.2)*cos(j*(2*pi)/(ntot(i)));\n        k = k+1;\n    end\nend\nfigure\ngplot(A, [x y],'-k*')\nset(gca,'XTick',[],'YTick',[])\ntitle('Fat-Tree Topology','Color','k','fontsize', 18)\n\nsaveas(gcf,'/data/network_topologies/fattree2.png')"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 344,
            "y": 221.00296020507812
          },
          "__class__": "Node"
        },
        {
          "id": "77a56038-1a92-4daf-ad01-830a5b1eb5d4",
          "position": {
            "x": 74,
            "y": 167.00296020507812
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 88,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Trigger",
            "events": null,
            "description": "### Description\nThe TRIGGER component is used to start streams.\n\n### Output\nThe parameter Type can be set as a **String** or an **Object**. The parameter Value, on the other hand, defines the actual output of the component.",
            "inputs": [],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "type",
                  "type": "select",
                  "description": "The type of data",
                  "label": "Type",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": [
                    "String",
                    "Object"
                  ],
                  "value": null
                },
                {
                  "name": "value",
                  "type": "dynamic",
                  "dynamicType": {
                    "String": "area",
                    "Object": "code"
                  },
                  "parent": "type",
                  "label": "Value",
                  "validation": {
                    "required": "Required field"
                  }
                }
              ],
              "click": "Send message",
              "icon": "RiPlayFill",
              "values": {
                "comment": "",
                "alias": "n pods",
                "debug": false,
                "type": "Object",
                "value": "10"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 74,
            "y": 167.00296020507812
          },
          "__class__": "Node"
        },
        {
          "id": "deb981d4-c74a-4d5d-a356-b4291e664d91",
          "position": {
            "x": 569,
            "y": -56
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Trigger",
            "events": null,
            "description": "### Description\nThe TRIGGER component is used to start streams.\n\n### Output\nThe parameter Type can be set as a **String** or an **Object**. The parameter Value, on the other hand, defines the actual output of the component.",
            "inputs": [],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "type",
                  "type": "select",
                  "description": "The type of data",
                  "label": "Type",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": [
                    "String",
                    "Object"
                  ],
                  "value": null
                },
                {
                  "name": "value",
                  "type": "dynamic",
                  "dynamicType": {
                    "String": "area",
                    "Object": "code"
                  },
                  "parent": "type",
                  "label": "Value",
                  "validation": {
                    "required": "Required field"
                  }
                }
              ],
              "click": "Send message",
              "icon": "RiPlayFill",
              "values": {
                "type": "String",
                "value": "Hello world!"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 569,
            "y": -56
          },
          "__class__": "Node"
        },
        {
          "id": "930fc3b6-227c-4b9b-ab00-c41cf14d0b5e",
          "position": {
            "x": 781,
            "y": 13
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Octave",
            "events": null,
            "description": "This components allows to run octave/matlab code. The return value has to be assigned to the 'ret' variable",
            "inputs": [
              {
                "id": "input",
                "label": "input",
                "service": "",
                "to": "output"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Scripting",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "code",
                  "type": "code",
                  "label": "code",
                  "helper": "",
                  "group": "",
                  "value": "ret=linspace(0, 2*pi)",
                  "description": "",
                  "validation": null
                }
              ],
              "click": null,
              "icon": "RiCheckboxBlankCircleFill",
              "values": {
                "comment": "",
                "alias": "Tennis",
                "debug": true,
                "code": "img = imread(\"/data/Tennis.bmp\");\nfigure; imshow(img,[]);\n\nsaveas(gcf, '/data/tennis.png')\n\n[m n] = size(img);\nf = fftshift(fft2(img));\n\n%f(find(abs(f)==max(max(abs(f))))) = 0;\n%idxs = find(abs(f)==sort(abs(f),'descend'))(1:100);\n% levo i 100 valori pi\u00f9 alti\nfor i = 1:100\n  f(find(abs(f)==max(max(abs(f))))) = 0;\nend\n\n% lascio solo una circonferenza interna di raggio 50\nr = 50;\nfor i=1:m\n  for j = 1:n\n    if (i-m/2)^2+(j-n/2)^2>=r^2\n      f(i,j) = 0;\n    end\n  end\n  end\n\nfigure;imshow(log(1.+ abs(f)),[]);\nsaveas(gcf, '/data/tennis2.png')\nimg=ifft2(ifftshift(f));\nfigure; imshow(img,[]);\nsaveas(gcf, '/data/tennis3.png')\n"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 781,
            "y": 13
          },
          "__class__": "Node"
        },
        {
          "id": "bcc8aca3-5bb9-4a52-a1ec-7c2e30cdaead",
          "position": {
            "x": 580,
            "y": 147
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Trigger",
            "events": null,
            "description": "### Description\nThe TRIGGER component is used to start streams.\n\n### Output\nThe parameter Type can be set as a **String** or an **Object**. The parameter Value, on the other hand, defines the actual output of the component.",
            "inputs": [],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "type",
                  "type": "select",
                  "description": "The type of data",
                  "label": "Type",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": [
                    "String",
                    "Object"
                  ],
                  "value": null
                },
                {
                  "name": "value",
                  "type": "dynamic",
                  "dynamicType": {
                    "String": "area",
                    "Object": "code"
                  },
                  "parent": "type",
                  "label": "Value",
                  "validation": {
                    "required": "Required field"
                  }
                }
              ],
              "click": "Send message",
              "icon": "RiPlayFill",
              "values": {
                "type": "String",
                "value": "Hello world!"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 580,
            "y": 147
          },
          "__class__": "Node"
        },
        {
          "id": "7956e12d-188f-4940-b2c6-31117b22db1b",
          "position": {
            "x": 793,
            "y": 229
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Octave",
            "events": null,
            "description": "This components allows to run octave/matlab code. The return value has to be assigned to the 'ret' variable",
            "inputs": [
              {
                "id": "input",
                "label": "input",
                "service": "",
                "to": "output",
                "closed": false
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Scripting",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "code",
                  "type": "code",
                  "label": "code",
                  "helper": "",
                  "group": "",
                  "value": "ret=linspace(0, 2*pi)",
                  "description": "",
                  "validation": null
                }
              ],
              "click": null,
              "icon": "RiCheckboxBlankCircleFill",
              "values": {
                "comment": "",
                "alias": "Kmeans",
                "debug": true,
                "code": "pkg load statistics;\n\nC1 = randn (100, 2) + 1;\nC2 = randn (100, 2) - 1;\ndata = [C1; C2];\n\n## Perform clustering\n[idx, centers] = kmeans (data, 2);\n\n## Plot the result\nfigure;\nplot (data (idx==1, 1), data (idx==1, 2), \"ro\");\nhold on;\nplot (data (idx==2, 1), data (idx==2, 2), \"bs\");\nplot (centers (:, 1), centers (:, 2), \"kv\", \"markersize\", 10);\nhold off;\n\nsaveas(gcf,'/data/kmeans.png')"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 793,
            "y": 229
          },
          "__class__": "Node"
        },
        {
          "id": "5af999fe-1c55-409a-91e8-a93d75c2a61c",
          "position": {
            "x": 7.15732352747051,
            "y": 469.38251920574055
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Trigger",
            "events": null,
            "description": "### Description\nThe TRIGGER component is used to start streams.\n\n### Output\nThe parameter Type can be set as a **String** or an **Object**. The parameter Value, on the other hand, defines the actual output of the component.",
            "inputs": [],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "type",
                  "type": "select",
                  "description": "The type of data",
                  "label": "Type",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": [
                    "String",
                    "Object"
                  ],
                  "value": null
                },
                {
                  "name": "value",
                  "type": "dynamic",
                  "dynamicType": {
                    "String": "area",
                    "Object": "code"
                  },
                  "parent": "type",
                  "label": "Value",
                  "validation": {
                    "required": "Required field"
                  }
                }
              ],
              "click": "Send message",
              "icon": "RiPlayFill",
              "values": {
                "type": "String",
                "value": "Hello world!"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 7.15732352747051,
            "y": 469.38251920574055
          },
          "__class__": "Node"
        },
        {
          "id": "f0c07c44-90ab-4d96-8bbf-a7fdb2f8ac28",
          "position": {
            "x": 221.2051384281881,
            "y": 422.1434447021527
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Function",
            "events": null,
            "description": "### Description\nThe FUNCTION component is used to apply Python code to the input component's. The input can be retrieved using the variable *data*.\n\nTo be able to use data from components of type FUNCTION that are not linked together, the object is set repository.\n\n```python\nrepository.set('value', 5) - this sets the variable value to 5.\nrepository.get('value') - in this way the variable is called value and the value 5 is returned.\n```\n\n### Input\nThe input is used by the component using the variable **data**.\n\n### Output\nThe output coincides with the return of the code defined when the component was created.",
            "inputs": [
              {
                "id": "input",
                "label": "input"
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "propagate",
                  "type": "boolean",
                  "label": "Flush at the end"
                },
                {
                  "name": "notify_warnings",
                  "type": "boolean",
                  "label": "Notify warnings"
                },
                {
                  "name": "code",
                  "type": "code",
                  "description": "A python function that processes the incoming message. \nVariables available are:\n- **data**: the incoming message\n",
                  "label": "Code",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": null,
                  "value": null
                }
              ],
              "click": null,
              "icon": "RiCodeSSlashFill",
              "values": {
                "comment": "",
                "alias": "Data",
                "debug": false,
                "propagate": true,
                "notify_warnings": true,
                "code": "import random\nc1 = [[random.normalvariate(mu=10, sigma=1) for j in range(2)] for i in range(100)]\nc2 = [[random.normalvariate(mu=-10, sigma=1) for j in range(2)] for i in range(100)]\nreturn [c1,c2]"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 221.2051384281881,
            "y": 422.1434447021527
          },
          "__class__": "Node"
        },
        {
          "id": "18e28274-3ba2-4e64-b3e1-eaa4c4537aa4",
          "position": {
            "x": 423.798732893658,
            "y": 510.89014727002757
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Octave",
            "events": null,
            "description": "This components allows to run octave/matlab code. The return value has to be assigned to the 'ret' variable",
            "inputs": [
              {
                "id": "input",
                "label": "input",
                "service": "",
                "to": "output",
                "closed": false
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Scripting",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "code",
                  "type": "code",
                  "label": "code",
                  "helper": "",
                  "group": "",
                  "value": "ret=linspace(0, 2*pi)",
                  "description": "",
                  "validation": null
                }
              ],
              "click": null,
              "icon": "RiCheckboxBlankCircleFill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": true,
                "code": "pkg load statistics;\n\ndata = reshape(data, [200,2])';\nc1 = reshape(data(1,:), [100,2]);\nc2 = reshape(data(2,:), [100,2]);\ndata = [c1; c2];\n\n## Perform clustering\n[idx, centers] = kmeans (data, 2);\n\n## Plot the result\nfigure;\nplot (data (idx==1, 1), data (idx==1, 2), \"ro\");\nhold on;\nplot (data (idx==2, 1), data (idx==2, 2), \"bs\");\nplot (centers (:, 1), centers (:, 2), \"kv\", \"markersize\", 10);\nhold off;\n\nsaveas(gcf,'/data/kmeans2.png');\n\nret = centers;\n\n"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 423.798732893658,
            "y": 510.89014727002757
          },
          "__class__": "Node"
        },
        {
          "id": "4334693d-d9a9-4f48-9509-ff36a93cf113",
          "position": {
            "x": 621.9899172712085,
            "y": 422.5027479712726
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 88,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Trigger",
            "events": null,
            "description": "### Description\nThe TRIGGER component is used to start streams.\n\n### Output\nThe parameter Type can be set as a **String** or an **Object**. The parameter Value, on the other hand, defines the actual output of the component.",
            "inputs": [],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Common",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "type",
                  "type": "select",
                  "description": "The type of data",
                  "label": "Type",
                  "validation": {
                    "required": "Required field"
                  },
                  "fragment": null,
                  "advanced": false,
                  "options": [
                    "String",
                    "Object"
                  ],
                  "value": null
                },
                {
                  "name": "value",
                  "type": "dynamic",
                  "dynamicType": {
                    "String": "area",
                    "Object": "code"
                  },
                  "parent": "type",
                  "label": "Value",
                  "validation": {
                    "required": "Required field"
                  }
                }
              ],
              "click": "Send message",
              "icon": "RiPlayFill",
              "values": {
                "comment": "",
                "alias": "",
                "debug": false,
                "type": "Object",
                "value": "[0,0,0,0,1,2,3,7]"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 621.9899172712085,
            "y": 422.5027479712726
          },
          "__class__": "Node"
        },
        {
          "id": "d8a0f4f6-65ed-4bc0-b8aa-013659dd4dd2",
          "position": {
            "x": 834.9899172712085,
            "y": 511.5027479712726
          },
          "type": "custom",
          "dragHandle": "#nodeHandle",
          "sourcePosition": "right",
          "targetPosition": "left",
          "width": 150,
          "height": 56,
          "selected": false,
          "dragging": false,
          "data": {
            "name": "Octave",
            "events": null,
            "description": "This components allows to run octave/matlab code. The return value has to be assigned to the 'ret' variable",
            "inputs": [
              {
                "id": "input",
                "label": "input",
                "service": "",
                "to": "output",
                "closed": false
              }
            ],
            "outputs": [
              {
                "id": "output",
                "label": "output"
              }
            ],
            "configured": true,
            "options": {
              "group": "Scripting",
              "args": [
                {
                  "name": "comment",
                  "type": "area",
                  "label": "Node comment",
                  "helper": "Use it to explain the usage of this node"
                },
                {
                  "name": "alias",
                  "type": "text",
                  "label": "Name",
                  "helper": "Use this name as an alias"
                },
                {
                  "name": "debug",
                  "type": "boolean",
                  "label": "Debug to Console",
                  "divider": true
                },
                {
                  "name": "code",
                  "type": "code",
                  "label": "code",
                  "helper": "",
                  "group": "",
                  "value": "ret=linspace(0, 2*pi)",
                  "description": "",
                  "validation": null
                }
              ],
              "click": null,
              "icon": "RiCheckboxBlankCircleFill",
              "values": {
                "comment": "",
                "alias": "NAN Package",
                "debug": true,
                "code": "pkg install -forge nan;\npkg load nan;\n\nret = quantile(data, .99)\n"
              }
            },
            "locked": null
          },
          "selectable": true,
          "draggable": true,
          "positionAbsolute": {
            "x": 834.9899172712085,
            "y": 511.5027479712726
          },
          "__class__": "Node"
        }
      ],
      "edges": [
        {
          "id": "reactflow__edge-0784a7ea-5fe1-453e-a404-28700da5b991output-165c3f94-8187-4466-9d1e-5f145aa8e348input",
          "source": "0784a7ea-5fe1-453e-a404-28700da5b991",
          "sourceHandle": "output",
          "target": "165c3f94-8187-4466-9d1e-5f145aa8e348",
          "targetHandle": "input",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-77a56038-1a92-4daf-ad01-830a5b1eb5d4output-0abfc61f-132b-46a3-87c7-7032125f3ce8input",
          "source": "77a56038-1a92-4daf-ad01-830a5b1eb5d4",
          "sourceHandle": "output",
          "target": "0abfc61f-132b-46a3-87c7-7032125f3ce8",
          "targetHandle": "input",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-deb981d4-c74a-4d5d-a356-b4291e664d91output-930fc3b6-227c-4b9b-ab00-c41cf14d0b5einput",
          "source": "deb981d4-c74a-4d5d-a356-b4291e664d91",
          "sourceHandle": "output",
          "target": "930fc3b6-227c-4b9b-ab00-c41cf14d0b5e",
          "targetHandle": "input",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-bcc8aca3-5bb9-4a52-a1ec-7c2e30cdaeadoutput-7956e12d-188f-4940-b2c6-31117b22db1binput",
          "source": "bcc8aca3-5bb9-4a52-a1ec-7c2e30cdaead",
          "sourceHandle": "output",
          "target": "7956e12d-188f-4940-b2c6-31117b22db1b",
          "targetHandle": "input",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-5af999fe-1c55-409a-91e8-a93d75c2a61coutput-f0c07c44-90ab-4d96-8bbf-a7fdb2f8ac28input",
          "source": "5af999fe-1c55-409a-91e8-a93d75c2a61c",
          "sourceHandle": "output",
          "target": "f0c07c44-90ab-4d96-8bbf-a7fdb2f8ac28",
          "targetHandle": "input",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#D770AD"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-f0c07c44-90ab-4d96-8bbf-a7fdb2f8ac28output-18e28274-3ba2-4e64-b3e1-eaa4c4537aa4input",
          "source": "f0c07c44-90ab-4d96-8bbf-a7fdb2f8ac28",
          "sourceHandle": "output",
          "target": "18e28274-3ba2-4e64-b3e1-eaa4c4537aa4",
          "targetHandle": "input",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        },
        {
          "id": "reactflow__edge-4334693d-d9a9-4f48-9509-ff36a93cf113output-d8a0f4f6-65ed-4bc0-b8aa-013659dd4dd2input",
          "source": "4334693d-d9a9-4f48-9509-ff36a93cf113",
          "sourceHandle": "output",
          "target": "d8a0f4f6-65ed-4bc0-b8aa-013659dd4dd2",
          "targetHandle": "input",
          "data": {
            "startColor": "#D770AD",
            "stopColor": "#888"
          },
          "selected": false,
          "dragging": false,
          "__class__": "Edge"
        }
      ],
      "__class__": "Graph"
    }
  },
  "open": [
    "main"
  ],
  "active": "main",
  "version": "1.0.0",
  "__class__": "Project"
}